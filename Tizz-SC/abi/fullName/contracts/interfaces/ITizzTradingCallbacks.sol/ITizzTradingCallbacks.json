[
  "error Forbidden()",
  "error WrongParams()",
  "event BaseAssetVaultFeeCharged(address indexed trader, uint256 valueBaseAsset)",
  "event ClosingFeeCharged(address indexed trader, uint256 pairIndex, uint256 index, uint256 closingFees)",
  "event ClosingFeeSharesPUpdated(uint256 baseAssetVaultFeeP, uint256 lpFeeP, uint256 sssFeeP)",
  "event Done(bool done)",
  "event FundingFeeCharged(address indexed trader, uint256 pairIndex, uint256 tradeValueBaseAsset, uint256 feeValueBaseAsset)",
  "event GovFeeCharged(address indexed trader, uint256 valueBaseAsset, bool distributed)",
  "event GovFeesClaimed(uint256 valueBaseAsset)",
  "event LimitExecuted(uint256 indexed orderId, uint256 limitIndex, tuple(address trader, uint256 pairIndex, uint256 index, uint256 initialPosToken, uint256 positionSizeBaseAsset, uint256 openPrice, bool buy, uint256 leverage, uint256 tp, uint256 sl) t, address indexed nftHolder, uint8 orderType, uint256 price, uint256 priceImpactP, uint256 positionSizeBaseAsset, int256 percentProfit, uint256 baseAssetSentToTrader, uint256 collateralPriceUsd, bool exactExecution)",
  "event MarketCloseCanceled(uint256 indexed orderId, address indexed trader, uint256 indexed pairIndex, uint256 index, uint8 cancelReason)",
  "event MarketExecuted(uint256 indexed orderId, tuple(address trader, uint256 pairIndex, uint256 index, uint256 initialPosToken, uint256 positionSizeBaseAsset, uint256 openPrice, bool buy, uint256 leverage, uint256 tp, uint256 sl) t, bool open, uint256 price, uint256 priceImpactP, uint256 positionSizeBaseAsset, int256 percentProfit, uint256 baseAssetSentToTrader, uint256 collateralPriceUsd)",
  "event MarketOpenCanceled(uint256 indexed orderId, address indexed trader, uint256 indexed pairIndex, uint8 cancelReason)",
  "event NftOrderCanceled(uint256 indexed orderId, address indexed nftHolder, uint8 orderType, uint8 cancelReason)",
  "event OpeningFeeCharged(address indexed trader, uint256 pairIndex, uint256 index, uint256 openingFees)",
  "event Pause(bool paused)",
  "event ReferralFeeCharged(address indexed trader, uint256 valueBaseAsset)",
  "event SssFeeCharged(address indexed trader, uint256 valueBaseAsset)",
  "event TizzEscrowUpdated(address indexed tizzEscrow)",
  "event TriggerFeeCharged(address indexed trader, uint256 valueBaseAsset)",
  "function closeTradeMarketCallback(tuple(uint256 orderId, uint256 price, uint256 spreadP, uint256 open, uint256 high, uint256 low) a, tuple(tuple(address trader, uint256 pairIndex, uint256 index, uint256 initialPosToken, uint256 positionSizeBaseAsset, uint256 openPrice, bool buy, uint256 leverage, uint256 tp, uint256 sl) trade, uint256 block, uint256 wantedPrice, uint256 slippageP, uint256 spreadReductionP) o)",
  "function executeNftCloseOrderCallback(tuple(uint256 orderId, uint256 price, uint256 spreadP, uint256 open, uint256 high, uint256 low), tuple(address nftHolder, uint256 nftId, address trader, uint256 pairIndex, uint256 index, uint8 orderType))",
  "function executeNftOpenOrderCallback(tuple(uint256 orderId, uint256 price, uint256 spreadP, uint256 open, uint256 high, uint256 low), tuple(address nftHolder, uint256 nftId, address trader, uint256 pairIndex, uint256 index, uint8 orderType))",
  "function getTradeLastUpdated(address, uint256, uint256, uint8) view returns (tuple(uint256 tp, uint256 sl, uint256 limit, uint64 created))",
  "function openTradeMarketCallback(tuple(uint256 orderId, uint256 price, uint256 spreadP, uint256 open, uint256 high, uint256 low) a, tuple(tuple(address trader, uint256 pairIndex, uint256 index, uint256 initialPosToken, uint256 positionSizeBaseAsset, uint256 openPrice, bool buy, uint256 leverage, uint256 tp, uint256 sl) trade, uint256 block, uint256 wantedPrice, uint256 slippageP, uint256 spreadReductionP) o)",
  "function setTradeData(tuple(address trader, uint256 pairIndex, uint256 index, uint8 tradeType), tuple(uint256 maxSlippageP, uint256 lastOiUpdateTs, uint256 collateralPriceUsd, uint256 _placeholder))",
  "function setTradeLastUpdated(tuple(address trader, uint256 pairIndex, uint256 index, uint8 tradeType), tuple(uint256 tp, uint256 sl, uint256 limit, uint64 created))"
]
